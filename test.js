
const ChangeManager = require('.')

const b = new ChangeManager({ x: 10 })
b.set([{ key: 'x' }], 100)
console.log(b)
b.remove([{ key: 'x' }])
console.log(b)
b.set([{ key: 'x' }], 200)
console.log(b)

const a = new ChangeManager
a.set([{ key: 'x' }], 10)
// console.log(a)
console.log(a.get([{ key: 'x' }]))
// a.bind([{key:'x'}], () => console.log('change 1'))
a.set([{ key: 'x' }], 20)
console.log(a.get([{ key: 'x' }]))
a.set([{key:'y'},{key:'z'}], 30)
a.set([{key:'y'},{key:'z'}], 35)
a.set([{key:'y'},{key:'z'}], 35)
console.log(a.get([{ key: 'y' }]))
console.log(a.get([{ key: 'y' }, { key: 'z' }]))
const handle2 = (v) => console.log('change 2', v)
const handle2b = (v) => console.log('change 2b', v)
a.bind([{key:'y'},{key:'z'}], handle2)
a.bind([{key:'y'},{key:'z'}], handle2b)
a.unbind([{key:'y'},{key:'z'}], handle2)
a.set([{key:'y'},{key:'z'}], 40)
a.set([{key:'z',list:true},{item:true,i:0},{key:'foo'}], 100)
a.remove([{key:'z',list:true},{item:true,i:0}])
a.setErrors([{ key: 'z' }], ['foo'])
console.log(a.getErrors([{ key: 'z' }]))
a.removeErrors([{ key: 'z' }])
console.log(a.getErrors([{ key: 'z' }]))
a.commit()
console.log(JSON.stringify(a, null, 2))
